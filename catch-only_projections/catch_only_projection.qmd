---
title: "Catch only projection for canary rockfish"
author: "YOUR NAME (Northwest/Southwest Fisheries Science Center)" 
date: today
format: pdf
params:
  species: "canary rockfish"
  assess_year: 2025
  current_year: 2025
  final_proj_year: 2036
  category: 1
  sigma: 0.50
  p_star: 0.45
---

```{r}
#| label: parameters
#| echo: false
#| warning: false
#| message: false
species <- params$species
Species <- stringr::str_to_sentence(params$species)
assess_year <- params$assess_year
current_year <- params$current_year
final_proj_year <- params$final_proj_year
category <- params$category
sigma <- params$sigma
p_star <- params$p_star

model <- r4ss::SS_output(
  dir = "YOUR MODEL DIRECTORY",
  verbose = FALSE,
  printstats = FALSE, 
  hidewarn = TRUE) 

```

This document details a catch-only projection for `r species`. The most recent assessment for `r species` was conducted in `r assess_year`. This analysis updates catches between `r assess_year` - `r current_year` to the removals by year from the Groundfish Multiyear Mortality (GEMM) report. The removals for `r current_year` and `r current_year + 1` were set equal to mortality projections provided by the Groundfish Management Team (GMT). For years `r current_year + 2` and beyond, removals were set equal to the projected Acceptable Biological Catch (ABC) based on a category `r category` time-varying $\sigma$ of `r sigma` and a P* value of `r p_star`.

```{r}
#| label: tbl-proj
#| echo: false
#| warning: false
#| message: false
#| tbl-cap: "Projected OFLs (mt), ABCs (mt), buffer, spawning output, and stock status given the assumed removals."

# ranges of years
all_years <- assess_year:final_proj_year
proj_years <- (current_year + 2):final_proj_year
catch_years <- assess_year:(current_year + 1)

# get fixed catches
catch <- model$derived_quants |> 
  dplyr::filter(Label %in% paste0("ForeCatch_", catch_years)) |> 
  dplyr::summarise(
    Year = stringr::str_extract(Label, "\\d+"),
    Catch = Value) 
# get OFL and ABC from projection years
ofl <- model$derived_quants |> 
  dplyr::filter(Label %in% paste0("OFLCatch_", proj_years)) |> 
  dplyr::summarise(
    Year = stringr::str_extract(Label, "\\d+"),
    OFL = Value) 
abc <- model$derived_quants |> 
  dplyr::filter(Label %in% paste0("ForeCatch_", proj_years)) |> 
  dplyr::summarise(
    Year = stringr::str_extract(Label, "\\d+"),
    ABC = Value) 
# get spawning output
sb <- model$derived_quants |> 
  dplyr::filter(Label %in% paste0("SSB_", all_years)) |> 
  dplyr::summarise(
    Year = stringr::str_extract(Label, "\\d+"),
    SB = Value) 
# get fraction of unfished (a.k.a. stock status)
depl <- model$derived_quants |> 
  dplyr::filter(Label %in% paste0("Bratio_", all_years)) |> 
  dplyr::summarise(
    Year = stringr::str_extract(Label, "\\d+"),
    depl = round(Value, 3)) 

# combine the various tables
dplyr::full_join(dplyr::full_join(dplyr::full_join(dplyr::full_join(ofl, abc), sb), depl), catch) |>
  dplyr::arrange(Year) |>
  dplyr::relocate(Catch, .after = Year) |>
  dplyr::mutate(
    Buffer = dplyr::case_when(depl >= model$btarg ~ round(ABC / OFL, 3), .default = NA),
    .after = ABC
  ) |>
  dplyr::rename(
    `Assumed Removals (mt)` = Catch,
    `Stock Status` = depl,
    `Spawning Output` = SB,
    ) |>
  gt::gt() |>
  gt::fmt_number(
    columns = c(2:4, 6),
    decimals = 0
  ) |>
  gt::tab_options(
    table.font.size = 12,
    latex.use_longtable = TRUE 
  ) |>
  gt::sub_missing(
    columns = tidyselect::everything(),
    missing_text = "---"
  ) |>
  gt::cols_align(
    align = "center"
  ) |>
  gt::as_latex()


```



